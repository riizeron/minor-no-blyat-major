% m = 2; k = 20
% Найдем аналитически стационарные точки:
% dx = -0.02x - atan(20*z) = 0 ==> x = -50*atan(20z) ==> 0.08z =
% -50*atan(20z) ==> z = 625*atan(20z) ==> z = 0 ==> x = 0 ==> y = 0
% dy = x - 0.04*y = 0 ==> x = 0.04y ==> x = 0.08z
% dz = y - 2*z  = 0 ==> y = 2z
% Следовательно стационарная точка единственна, она имеет нулевые
% координаты.
% Для того чтобы определить устойчивость точек, линеаризуем систему в
% окрестности стационарной точки, то есть - нуля.
% Две последние функции уже линейны, значит разберемся с atan-ом.
% В окрестности нуля -50*atan(20x) ~ z.
% Перепишем систему, учтя проведенную аппроксимацию.
% dx = -0.02x - z
% dy = x - 0.04y
% dz = y - 2z
% Составим матрицу:
% A = -0.02  0   -1
%       1  -0.04  0
%       0    1   -2
% Для того, чтобы определить устойчивость точки необходимо посмотреть на
% собственные числа матрицы А.
A = [-0.02, 0, -1;
     1, -0.04, 0;
     0, 1, -2];
% Можно бы воспользоваться функцией eig(A), но воспользуемся методом,
% разобранном на семинаре.
% Находим характеристический многочлен
char_p = -poly(A);
% Вычислим его корни
display(char_p);
display(roots(char_p));
%lam = linspace(-5,3);
%plot(lam, polyval(char_p, lam));
%line([min(lam), max(lam)],[0, 0], 'Color', 'red');
% Заметим, что вещественное собственное значение отрицательно, а комплексные 
% - положительны, значит стационаная точка неустойчива.
%
% Построим матрицу гурвица:
Gur = [-2.06, -1.0016, 0;
        -1, -0.1208, 0;
        0, -2.06, -1.0016];
display(Gur);
% Проведем анализ системы измользуя критерий гурвица:
% Первый минор матрицы отрицателен, это число - -2.06
% Второй равен ~ -0.75 - тоже отрицателен.
% Третиьм, главным минором, будет являтся определитель матрицы гурвица:
% Он равен: 0.7540
% Из всего этого делаем вывод о том, что рассматриваемая система
% неустойчива!
display(det(Gur));
%
% Теперь перейдем к построению графика.
x_up = pi/0.02;
y_up = pi/0.0004;
z_up = pi/0.0012;
% Зададим 3D сетку.
[x, y, z] = meshgrid(...,
    linspace(-x_up, x_up),...
    linspace(-y_up, y_up),...
    linspace(-z_up, z_up));
dx =  -0.02*x - atan(20*z);
dy = x - 0.04*y;
dz = y - 2*z;
% Возмем случайные числа
Nstart = 15;
rng(1);
sx = (rand(Nstart, 1) - 0.5) * 2 * x_up;
sy = (rand(Nstart, 1) - 0.5) * 2 * y_up;
sz = (rand(Nstart, 1) - 0.5) * 2 * z_up;
figure(1);
% Построим 15 траекторий вблизи точки (0, 0, 0)
streamline(stream3(x, y, z, dx, dy, dz, sx, sy, sz));
hold on;
view(3);
plot3(0, 0, 0, '*r');
plot3(sx, sy, sz, '*g');
hold off;
view(3);
xlabel('x');
ylabel('y');
zlabel('z');
%
% Далее перейдем к исследованию системы на наличие предельного цикла.
% Для этого воспользуемся имым путем.
%
T = 200;
tau = .05;
tspan = 0 : tau : T;

x_up = pi/.02;
y_up = pi/.0004;
z_up = pi/.0012;

Nstart = 15;
rng(3);

sx = normrnd(0, 10, Nstart, 1);
sy = normrnd(0, 10, Nstart, 1);
sz = normrnd(0, 10, Nstart, 1);

figure(3);
for k = 1 : Nstart
    [t, S] = ode45(@ode_system, tspan, [sx(k), sy(k), sz(k)]);
    plot3(S(:, 1), S(:, 2), S(:, 3), '-k'); hold on;
end
plot3(0, 0, 0, '*r');
plot3(sx, sy, sz, '*g');
view(3);
xlabel('x');
ylabel('y');
zlabel('z');
hold off;
% По графику заметим, что у системы есть прредельный цикл